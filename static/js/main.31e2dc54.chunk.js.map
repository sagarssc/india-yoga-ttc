{"version":3,"sources":["components/defaults/navbar.js","components/login/login.component.js","components/login/signup.component.js","components/home/slider.js","components/home/courses.js","components/home/home.js","components/defaults/footer.js","App.js","serviceWorker.js","index.js"],"names":["titles","Component","Navbar","className","style","position","map","title","index","images","url","Slider","width","height","showBullets","borderRadius","showNavs","courses","img","name","Courses","props","state","show","showDetails","bind","this","setState","course","onClick","src","subtext","marginLeft","background","marginBottom","Home","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sQAGMA,GCD6BC,YCACA,YFCrB,CAAC,UAAW,WAAY,OAAQ,YAC1BC,E,iLAEb,OACE,yBAAKC,UAAU,SAASC,MAAO,CAACC,SAAU,UACxC,yBAAKF,UAAU,iBACb,yBAAKA,UAAU,QAAf,kBAGA,yBAAKA,UAAU,YACZH,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACZ,uBAAGL,UAAU,aAAaI,a,GAVNN,a,iBGD9BQ,EAAS,CACb,CAAEC,IAAK,cACP,CAAEA,IAAK,cACP,CAAEA,IAAK,cACP,CAAEA,IAAK,cACP,CAAEA,IAAK,cACP,CAAEA,IAAK,cACP,CAAEA,IAAK,eAGYC,E,iLAEb,OACE,yBAAKR,UAAU,eACb,kBAAC,IAAD,CACES,MAAO,OACPC,OAAQ,OACRJ,OAAQA,EACRK,aAAa,EACbV,MAAO,CAAEC,SAAU,WAAYU,aAAc,QAC7CC,UAAU,S,GAVYf,a,OCV9BgB,EAAU,CACd,CAAEC,IAAK,aAAcC,KAAM,iBAC3B,CAAED,IAAK,aAAcC,KAAM,iBAC3B,CAAED,IAAK,aAAcC,KAAM,iBAC3B,CAAED,IAAK,aAAcC,KAAM,eAGRC,E,YAEnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,MAAM,GAER,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,2EAOD,IACTF,EAAQG,KAAKJ,MAAbC,KACLG,KAAKC,SAAS,CACZJ,MAAOA,M,+BAGD,IAAD,OACAA,EAAQG,KAAKJ,MAAbC,KACL,OACE,6BAEA,yBAAKpB,UAAU,WACZc,EAAQX,KAAI,SAACsB,EAAQpB,GAAT,OACX,yBAAKL,UAAU,SAAS0B,QAAS,EAAKL,aACtC,yBAAKM,IAAKF,EAAOV,MACjB,8BAAOU,EAAOT,MACd,kCAAQS,EAAOG,cAIfR,GAAQ,yBAAKnB,MAAO,CAACQ,MAAO,MAAMoB,WAAW,KAAMnB,OAAO,QAAQoB,WAAW,sDAAuDlB,aAAa,OAAQmB,aAAa,SACpK,mD,GA9BqBjC,aCLhBkC,E,iLAEjB,OACE,6BACE,yBAAKhC,UAAU,UACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,mBACb,gDACE,yBAAK2B,IAAI,iBACT,kBAAC,EAAD,Y,GAVsB7B,aCF5BD,EAAS,CAAC,UAAW,WAAY,OAAQ,WAC1BoC,E,iLAEb,OACE,yBAAKjC,UAAU,UACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,QAAf,QAGA,yBAAKA,UAAU,YACZH,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACZ,uBAAGL,UAAU,aAAaI,a,GAVNN,aCkCrBoC,MA1Bf,WACE,OAAQ,kBAAC,IAAD,KAEJ,yBAAKlC,UAAU,OACf,kBAAC,EAAD,MAEA,yBAAKA,UAAU,cACf,kBAAC,EAAD,MACA,kBAAC,EAAD,UCRcmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.31e2dc54.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst titles = [\"Courses\", \"About Us\", \"Blog\", \"Contact\" ]\nexport default class Navbar extends Component {\n    render() {\n        return (\n          <div className=\"navbar\" style={{position: \"fixed\"}}>\n            <div className=\"nav-container\">\n              <div className=\"logo\">\n                INDIA YOGA TTC\n              </div>\n              <div className=\"nav-menu\">\n                {titles.map((title, index) => (  \n                <p className=\"menu-text\">{title}</p>\n                ))}\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class Login extends Component {\n    render() {\n        return (\n            <form>\n                <h3>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n            </form>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class SignUp extends Component {\n    render() {\n        return (\n            <form>\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Last name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                <p className=\"forgot-password text-right\">\n                    Already registered <a href=\"#\">sign in?</a>\n                </p>\n            </form>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport SimpleImageSlider from \"react-simple-image-slider\";\n\nconst images = [\n  { url: \"/slide.png\" },\n  { url: \"/slide.png\" },\n  { url: \"/slide.png\" },\n  { url: \"/slide.png\" },\n  { url: \"/slide.png\" },\n  { url: \"/slide.png\" },\n  { url: \"/slide.png\" },\n];\n\nexport default class Slider extends Component {\n    render() {\n        return (\n          <div className='slide-image'>\n            <SimpleImageSlider\n              width={'100%'}\n              height={'100%'}\n              images={images}\n              showBullets={true}\n              style={{ position: \"relative\", borderRadius: \"2rem\" }}\n              showNavs={false}\n            />\n          </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport SimpleImageSlider from \"react-simple-image-slider\";\n\nconst courses = [\n  { img: \"/slide.png\", name: \"100 Hours TTC\", },\n  { img: \"/slide.png\", name: \"200 Hours TTC\"},\n  { img: \"/slide.png\", name: \"300 Hours TTC\"},\n  { img: \"/slide.png\", name: \"Online TTC\"},\n];\n\nexport default class Courses extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    }\n    this.showDetails = this.showDetails.bind(this);\n    }\n    showDetails () {\n      let {show} = this.state\n      this.setState({\n        show: !show\n      })\n    }\n    render() {\n        let {show} = this.state\n        return (\n          <div>\n\n          <div className='courses'>\n            {courses.map((course, index) =>(\n              <div className=\"course\" onClick={this.showDetails}>\n              <img src={course.img} />\n              <text>{course.name}</text>\n              <text> {course.subtext}</text>\n            </div>\n            ))}\n          </div>\n            { show && <div style={{width: \"90%\",marginLeft:\"5%\", height:\"25rem\",background:\"linear-gradient(to right, #ffffff 0%, #5C5889 100%)\", borderRadius:\"4rem\", marginBottom:\"2rem\"}}>\n                <text>Description</text>\n              </div>}\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Slider from \"./slider\";\nimport Courses from \"./courses\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"slides\">\n          <Slider />\n        </div>\n        <div className=\"explore-courses\">\n          <p> Explores Courses</p>\n            <img src=\"/divider.png\"/>\n            <Courses />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst titles = [\"Courses\", \"About Us\", \"Blog\", \"Contact\" ]\nexport default class Footer extends Component {\n    render() {\n        return (\n          <nav className=\"footer\">\n            <div className=\"nav-container\">\n              <div className=\"logo\">\n                ALFA\n              </div>\n              <div className=\"nav-menu\">\n                {titles.map((title, index) => (  \n                <p className=\"menu-text\">{title}</p>\n                ))}\n              </div>\n            </div>\n          </nav>\n        );\n    }\n}\n","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Login from \"./components/login/login.component\";\nimport SignUp from \"./components/login/signup.component\";\n\nimport Navbar from \"./components/defaults/navbar\";\nimport Home from  \"./components/home/home\";\nimport Footer from './components/defaults/footer';\n\nfunction App() {\n  return (<Router>\n    {/* <div className=\"App\"> */}\n      <div className=\"app\">\n      <Navbar/>\n      {/* <img className='home-image' src='/png1.png' /> */}\n      <div className='background'>\n      <Home />\n      <Footer />\n      </div>\n      </div>\n      {/* <Home /> */}\n      {/* <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <Switch>\n            <Route exact path='/' component={Login} />\n            <Route path=\"/sign-in\" component={Login} />\n            <Route path=\"/sign-up\" component={SignUp} />\n          </Switch>\n        </div>\n      </div> */}\n    {/* </div> */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}